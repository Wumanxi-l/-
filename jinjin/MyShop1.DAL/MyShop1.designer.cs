#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyShop1.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Locker")]
	public partial class MyShop1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insert快递员表(快递员表 instance);
    partial void Update快递员表(快递员表 instance);
    partial void Delete快递员表(快递员表 instance);
    partial void Insert日志表(日志表 instance);
    partial void Update日志表(日志表 instance);
    partial void Delete日志表(日志表 instance);
    partial void Insert用户表(用户表 instance);
    partial void Update用户表(用户表 instance);
    partial void Delete用户表(用户表 instance);
    partial void Insert快递柜表(快递柜表 instance);
    partial void Update快递柜表(快递柜表 instance);
    partial void Delete快递柜表(快递柜表 instance);
    partial void Insert寄件信息表(寄件信息表 instance);
    partial void Update寄件信息表(寄件信息表 instance);
    partial void Delete寄件信息表(寄件信息表 instance);
    partial void Insert快递信息表(快递信息表 instance);
    partial void Update快递信息表(快递信息表 instance);
    partial void Delete快递信息表(快递信息表 instance);
    partial void Insert快递物流信息(快递物流信息 instance);
    partial void Update快递物流信息(快递物流信息 instance);
    partial void Delete快递物流信息(快递物流信息 instance);
    partial void Insert投放快递审核表(投放快递审核表 instance);
    partial void Update投放快递审核表(投放快递审核表 instance);
    partial void Delete投放快递审核表(投放快递审核表 instance);
    partial void Insert寄件信息审核表(寄件信息审核表 instance);
    partial void Update寄件信息审核表(寄件信息审核表 instance);
    partial void Delete寄件信息审核表(寄件信息审核表 instance);
    partial void Insert快递滞留表(快递滞留表 instance);
    partial void Update快递滞留表(快递滞留表 instance);
    partial void Delete快递滞留表(快递滞留表 instance);
    partial void Insert寄件订单信息表(寄件订单信息表 instance);
    partial void Update寄件订单信息表(寄件订单信息表 instance);
    partial void Delete寄件订单信息表(寄件订单信息表 instance);
    partial void Insert取件订单信息表(取件订单信息表 instance);
    partial void Update取件订单信息表(取件订单信息表 instance);
    partial void Delete取件订单信息表(取件订单信息表 instance);
    #endregion
		
		public MyShop1DataContext() : 
				base(global::MyShop1.DAL.Properties.Settings.Default.LockerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyShop1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyShop1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyShop1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyShop1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<快递员表> 快递员表
		{
			get
			{
				return this.GetTable<快递员表>();
			}
		}
		
		public System.Data.Linq.Table<日志表> 日志表
		{
			get
			{
				return this.GetTable<日志表>();
			}
		}
		
		public System.Data.Linq.Table<用户表> 用户表
		{
			get
			{
				return this.GetTable<用户表>();
			}
		}
		
		public System.Data.Linq.Table<快递柜表> 快递柜表
		{
			get
			{
				return this.GetTable<快递柜表>();
			}
		}
		
		public System.Data.Linq.Table<寄件信息表> 寄件信息表
		{
			get
			{
				return this.GetTable<寄件信息表>();
			}
		}
		
		public System.Data.Linq.Table<快递信息表> 快递信息表
		{
			get
			{
				return this.GetTable<快递信息表>();
			}
		}
		
		public System.Data.Linq.Table<快递物流信息> 快递物流信息
		{
			get
			{
				return this.GetTable<快递物流信息>();
			}
		}
		
		public System.Data.Linq.Table<投放快递审核表> 投放快递审核表
		{
			get
			{
				return this.GetTable<投放快递审核表>();
			}
		}
		
		public System.Data.Linq.Table<寄件信息审核表> 寄件信息审核表
		{
			get
			{
				return this.GetTable<寄件信息审核表>();
			}
		}
		
		public System.Data.Linq.Table<快递滞留表> 快递滞留表
		{
			get
			{
				return this.GetTable<快递滞留表>();
			}
		}
		
		public System.Data.Linq.Table<寄件订单信息表> 寄件订单信息表
		{
			get
			{
				return this.GetTable<寄件订单信息表>();
			}
		}
		
		public System.Data.Linq.Table<取件订单信息表> 取件订单信息表
		{
			get
			{
				return this.GetTable<取件订单信息表>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.快递员表")]
	public partial class 快递员表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _快递员ID;
		
		private string _快递员姓名;
		
		private string _联系电话;
		
		private string _快递公司;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On快递员IDChanging(string value);
    partial void On快递员IDChanged();
    partial void On快递员姓名Changing(string value);
    partial void On快递员姓名Changed();
    partial void On联系电话Changing(string value);
    partial void On联系电话Changed();
    partial void On快递公司Changing(string value);
    partial void On快递公司Changed();
    #endregion
		
		public 快递员表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 快递员ID
		{
			get
			{
				return this._快递员ID;
			}
			set
			{
				if ((this._快递员ID != value))
				{
					this.On快递员IDChanging(value);
					this.SendPropertyChanging();
					this._快递员ID = value;
					this.SendPropertyChanged("快递员ID");
					this.On快递员IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员姓名", DbType="NVarChar(50)")]
		public string 快递员姓名
		{
			get
			{
				return this._快递员姓名;
			}
			set
			{
				if ((this._快递员姓名 != value))
				{
					this.On快递员姓名Changing(value);
					this.SendPropertyChanging();
					this._快递员姓名 = value;
					this.SendPropertyChanged("快递员姓名");
					this.On快递员姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_联系电话", DbType="NVarChar(50)")]
		public string 联系电话
		{
			get
			{
				return this._联系电话;
			}
			set
			{
				if ((this._联系电话 != value))
				{
					this.On联系电话Changing(value);
					this.SendPropertyChanging();
					this._联系电话 = value;
					this.SendPropertyChanged("联系电话");
					this.On联系电话Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递公司", DbType="NVarChar(50)")]
		public string 快递公司
		{
			get
			{
				return this._快递公司;
			}
			set
			{
				if ((this._快递公司 != value))
				{
					this.On快递公司Changing(value);
					this.SendPropertyChanging();
					this._快递公司 = value;
					this.SendPropertyChanged("快递公司");
					this.On快递公司Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.日志表")]
	public partial class 日志表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _log_id;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _创建时间;
		
		private string _操作内容;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlog_idChanging(int value);
    partial void Onlog_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void On创建时间Changing(System.Nullable<System.DateTime> value);
    partial void On创建时间Changed();
    partial void On操作内容Changing(string value);
    partial void On操作内容Changed();
    #endregion
		
		public 日志表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_log_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int log_id
		{
			get
			{
				return this._log_id;
			}
			set
			{
				if ((this._log_id != value))
				{
					this.Onlog_idChanging(value);
					this.SendPropertyChanging();
					this._log_id = value;
					this.SendPropertyChanged("log_id");
					this.Onlog_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_创建时间", DbType="DateTime")]
		public System.Nullable<System.DateTime> 创建时间
		{
			get
			{
				return this._创建时间;
			}
			set
			{
				if ((this._创建时间 != value))
				{
					this.On创建时间Changing(value);
					this.SendPropertyChanging();
					this._创建时间 = value;
					this.SendPropertyChanged("创建时间");
					this.On创建时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_操作内容", DbType="NVarChar(50)")]
		public string 操作内容
		{
			get
			{
				return this._操作内容;
			}
			set
			{
				if ((this._操作内容 != value))
				{
					this.On操作内容Changing(value);
					this.SendPropertyChanging();
					this._操作内容 = value;
					this.SendPropertyChanged("操作内容");
					this.On操作内容Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.用户表")]
	public partial class 用户表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _Name;
		
		private string _Password;
		
		private string _手机号码;
		
		private string _地址;
		
		private string _Email;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void On手机号码Changing(string value);
    partial void On手机号码Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public 用户表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手机号码", DbType="NVarChar(80)")]
		public string 手机号码
		{
			get
			{
				return this._手机号码;
			}
			set
			{
				if ((this._手机号码 != value))
				{
					this.On手机号码Changing(value);
					this.SendPropertyChanging();
					this._手机号码 = value;
					this.SendPropertyChanged("手机号码");
					this.On手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_地址", DbType="NVarChar(50)")]
		public string 地址
		{
			get
			{
				return this._地址;
			}
			set
			{
				if ((this._地址 != value))
				{
					this.On地址Changing(value);
					this.SendPropertyChanging();
					this._地址 = value;
					this.SendPropertyChanged("地址");
					this.On地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.快递柜表")]
	public partial class 快递柜表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _智能柜ID;
		
		private string _智能柜类型;
		
		private string _智能柜规格;
		
		private string _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On智能柜IDChanging(string value);
    partial void On智能柜IDChanged();
    partial void On智能柜类型Changing(string value);
    partial void On智能柜类型Changed();
    partial void On智能柜规格Changing(string value);
    partial void On智能柜规格Changed();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public 快递柜表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 智能柜ID
		{
			get
			{
				return this._智能柜ID;
			}
			set
			{
				if ((this._智能柜ID != value))
				{
					this.On智能柜IDChanging(value);
					this.SendPropertyChanging();
					this._智能柜ID = value;
					this.SendPropertyChanged("智能柜ID");
					this.On智能柜IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜类型", DbType="NVarChar(50)")]
		public string 智能柜类型
		{
			get
			{
				return this._智能柜类型;
			}
			set
			{
				if ((this._智能柜类型 != value))
				{
					this.On智能柜类型Changing(value);
					this.SendPropertyChanging();
					this._智能柜类型 = value;
					this.SendPropertyChanged("智能柜类型");
					this.On智能柜类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜规格", DbType="NVarChar(50)")]
		public string 智能柜规格
		{
			get
			{
				return this._智能柜规格;
			}
			set
			{
				if ((this._智能柜规格 != value))
				{
					this.On智能柜规格Changing(value);
					this.SendPropertyChanging();
					this._智能柜规格 = value;
					this.SendPropertyChanged("智能柜规格");
					this.On智能柜规格Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.寄件信息表")]
	public partial class 寄件信息表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _预约ID;
		
		private string _用户名;
		
		private string _手机号码;
		
		private string _寄件地址;
		
		private string _智能柜类型;
		
		private string _物品类型;
		
		private string _预约日期;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On预约IDChanging(int value);
    partial void On预约IDChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On手机号码Changing(string value);
    partial void On手机号码Changed();
    partial void On寄件地址Changing(string value);
    partial void On寄件地址Changed();
    partial void On智能柜类型Changing(string value);
    partial void On智能柜类型Changed();
    partial void On物品类型Changing(string value);
    partial void On物品类型Changed();
    partial void On预约日期Changing(string value);
    partial void On预约日期Changed();
    #endregion
		
		public 寄件信息表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_预约ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 预约ID
		{
			get
			{
				return this._预约ID;
			}
			set
			{
				if ((this._预约ID != value))
				{
					this.On预约IDChanging(value);
					this.SendPropertyChanging();
					this._预约ID = value;
					this.SendPropertyChanged("预约ID");
					this.On预约IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this.On用户名Changing(value);
					this.SendPropertyChanging();
					this._用户名 = value;
					this.SendPropertyChanged("用户名");
					this.On用户名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手机号码", DbType="NVarChar(50)")]
		public string 手机号码
		{
			get
			{
				return this._手机号码;
			}
			set
			{
				if ((this._手机号码 != value))
				{
					this.On手机号码Changing(value);
					this.SendPropertyChanging();
					this._手机号码 = value;
					this.SendPropertyChanged("手机号码");
					this.On手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_寄件地址", DbType="NVarChar(50)")]
		public string 寄件地址
		{
			get
			{
				return this._寄件地址;
			}
			set
			{
				if ((this._寄件地址 != value))
				{
					this.On寄件地址Changing(value);
					this.SendPropertyChanging();
					this._寄件地址 = value;
					this.SendPropertyChanged("寄件地址");
					this.On寄件地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜类型", DbType="NVarChar(50)")]
		public string 智能柜类型
		{
			get
			{
				return this._智能柜类型;
			}
			set
			{
				if ((this._智能柜类型 != value))
				{
					this.On智能柜类型Changing(value);
					this.SendPropertyChanging();
					this._智能柜类型 = value;
					this.SendPropertyChanged("智能柜类型");
					this.On智能柜类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_物品类型", DbType="NVarChar(50)")]
		public string 物品类型
		{
			get
			{
				return this._物品类型;
			}
			set
			{
				if ((this._物品类型 != value))
				{
					this.On物品类型Changing(value);
					this.SendPropertyChanging();
					this._物品类型 = value;
					this.SendPropertyChanged("物品类型");
					this.On物品类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_预约日期", DbType="NVarChar(50)")]
		public string 预约日期
		{
			get
			{
				return this._预约日期;
			}
			set
			{
				if ((this._预约日期 != value))
				{
					this.On预约日期Changing(value);
					this.SendPropertyChanging();
					this._预约日期 = value;
					this.SendPropertyChanged("预约日期");
					this.On预约日期Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.快递信息表")]
	public partial class 快递信息表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _快递单号;
		
		private string _快递员姓名;
		
		private string _快递员手机号码;
		
		private string _用户手机号码;
		
		private string _智能柜类型;
		
		private string _存放时间;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On快递单号Changing(string value);
    partial void On快递单号Changed();
    partial void On快递员姓名Changing(string value);
    partial void On快递员姓名Changed();
    partial void On快递员手机号码Changing(string value);
    partial void On快递员手机号码Changed();
    partial void On用户手机号码Changing(string value);
    partial void On用户手机号码Changed();
    partial void On智能柜类型Changing(string value);
    partial void On智能柜类型Changed();
    partial void On存放时间Changing(string value);
    partial void On存放时间Changed();
    #endregion
		
		public 快递信息表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递单号", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 快递单号
		{
			get
			{
				return this._快递单号;
			}
			set
			{
				if ((this._快递单号 != value))
				{
					this.On快递单号Changing(value);
					this.SendPropertyChanging();
					this._快递单号 = value;
					this.SendPropertyChanged("快递单号");
					this.On快递单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员姓名", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 快递员姓名
		{
			get
			{
				return this._快递员姓名;
			}
			set
			{
				if ((this._快递员姓名 != value))
				{
					this.On快递员姓名Changing(value);
					this.SendPropertyChanging();
					this._快递员姓名 = value;
					this.SendPropertyChanged("快递员姓名");
					this.On快递员姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员手机号码", DbType="NVarChar(50)")]
		public string 快递员手机号码
		{
			get
			{
				return this._快递员手机号码;
			}
			set
			{
				if ((this._快递员手机号码 != value))
				{
					this.On快递员手机号码Changing(value);
					this.SendPropertyChanging();
					this._快递员手机号码 = value;
					this.SendPropertyChanged("快递员手机号码");
					this.On快递员手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户手机号码", DbType="NVarChar(50)")]
		public string 用户手机号码
		{
			get
			{
				return this._用户手机号码;
			}
			set
			{
				if ((this._用户手机号码 != value))
				{
					this.On用户手机号码Changing(value);
					this.SendPropertyChanging();
					this._用户手机号码 = value;
					this.SendPropertyChanged("用户手机号码");
					this.On用户手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜类型", DbType="NVarChar(50)")]
		public string 智能柜类型
		{
			get
			{
				return this._智能柜类型;
			}
			set
			{
				if ((this._智能柜类型 != value))
				{
					this.On智能柜类型Changing(value);
					this.SendPropertyChanging();
					this._智能柜类型 = value;
					this.SendPropertyChanged("智能柜类型");
					this.On智能柜类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_存放时间", DbType="NVarChar(50)")]
		public string 存放时间
		{
			get
			{
				return this._存放时间;
			}
			set
			{
				if ((this._存放时间 != value))
				{
					this.On存放时间Changing(value);
					this.SendPropertyChanging();
					this._存放时间 = value;
					this.SendPropertyChanged("存放时间");
					this.On存放时间Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.快递物流信息")]
	public partial class 快递物流信息 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _快递单号;
		
		private string _收货人;
		
		private string _收货地址;
		
		private string _寄件人;
		
		private string _发货地址;
		
		private string _物流信息;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On快递单号Changing(string value);
    partial void On快递单号Changed();
    partial void On收货人Changing(string value);
    partial void On收货人Changed();
    partial void On收货地址Changing(string value);
    partial void On收货地址Changed();
    partial void On寄件人Changing(string value);
    partial void On寄件人Changed();
    partial void On发货地址Changing(string value);
    partial void On发货地址Changed();
    partial void On物流信息Changing(string value);
    partial void On物流信息Changed();
    #endregion
		
		public 快递物流信息()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递单号", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 快递单号
		{
			get
			{
				return this._快递单号;
			}
			set
			{
				if ((this._快递单号 != value))
				{
					this.On快递单号Changing(value);
					this.SendPropertyChanging();
					this._快递单号 = value;
					this.SendPropertyChanged("快递单号");
					this.On快递单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收货人", DbType="NVarChar(50)")]
		public string 收货人
		{
			get
			{
				return this._收货人;
			}
			set
			{
				if ((this._收货人 != value))
				{
					this.On收货人Changing(value);
					this.SendPropertyChanging();
					this._收货人 = value;
					this.SendPropertyChanged("收货人");
					this.On收货人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收货地址", DbType="NVarChar(50)")]
		public string 收货地址
		{
			get
			{
				return this._收货地址;
			}
			set
			{
				if ((this._收货地址 != value))
				{
					this.On收货地址Changing(value);
					this.SendPropertyChanging();
					this._收货地址 = value;
					this.SendPropertyChanged("收货地址");
					this.On收货地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_寄件人", DbType="NVarChar(50)")]
		public string 寄件人
		{
			get
			{
				return this._寄件人;
			}
			set
			{
				if ((this._寄件人 != value))
				{
					this.On寄件人Changing(value);
					this.SendPropertyChanging();
					this._寄件人 = value;
					this.SendPropertyChanged("寄件人");
					this.On寄件人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_发货地址", DbType="NVarChar(50)")]
		public string 发货地址
		{
			get
			{
				return this._发货地址;
			}
			set
			{
				if ((this._发货地址 != value))
				{
					this.On发货地址Changing(value);
					this.SendPropertyChanging();
					this._发货地址 = value;
					this.SendPropertyChanged("发货地址");
					this.On发货地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_物流信息", DbType="NVarChar(50)")]
		public string 物流信息
		{
			get
			{
				return this._物流信息;
			}
			set
			{
				if ((this._物流信息 != value))
				{
					this.On物流信息Changing(value);
					this.SendPropertyChanging();
					this._物流信息 = value;
					this.SendPropertyChanged("物流信息");
					this.On物流信息Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.投放快递审核表")]
	public partial class 投放快递审核表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private string _快递单号;
		
		private string _快递员姓名;
		
		private string _快递员手机号码;
		
		private string _用户手机号码;
		
		private string _智能柜类型;
		
		private string _存放时间;
		
		private string _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void On快递单号Changing(string value);
    partial void On快递单号Changed();
    partial void On快递员姓名Changing(string value);
    partial void On快递员姓名Changed();
    partial void On快递员手机号码Changing(string value);
    partial void On快递员手机号码Changed();
    partial void On用户手机号码Changing(string value);
    partial void On用户手机号码Changed();
    partial void On智能柜类型Changing(string value);
    partial void On智能柜类型Changed();
    partial void On存放时间Changing(string value);
    partial void On存放时间Changed();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public 投放快递审核表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递单号", DbType="NVarChar(50)")]
		public string 快递单号
		{
			get
			{
				return this._快递单号;
			}
			set
			{
				if ((this._快递单号 != value))
				{
					this.On快递单号Changing(value);
					this.SendPropertyChanging();
					this._快递单号 = value;
					this.SendPropertyChanged("快递单号");
					this.On快递单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员姓名", DbType="NVarChar(50)")]
		public string 快递员姓名
		{
			get
			{
				return this._快递员姓名;
			}
			set
			{
				if ((this._快递员姓名 != value))
				{
					this.On快递员姓名Changing(value);
					this.SendPropertyChanging();
					this._快递员姓名 = value;
					this.SendPropertyChanged("快递员姓名");
					this.On快递员姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递员手机号码", DbType="NVarChar(50)")]
		public string 快递员手机号码
		{
			get
			{
				return this._快递员手机号码;
			}
			set
			{
				if ((this._快递员手机号码 != value))
				{
					this.On快递员手机号码Changing(value);
					this.SendPropertyChanging();
					this._快递员手机号码 = value;
					this.SendPropertyChanged("快递员手机号码");
					this.On快递员手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户手机号码", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 用户手机号码
		{
			get
			{
				return this._用户手机号码;
			}
			set
			{
				if ((this._用户手机号码 != value))
				{
					this.On用户手机号码Changing(value);
					this.SendPropertyChanging();
					this._用户手机号码 = value;
					this.SendPropertyChanged("用户手机号码");
					this.On用户手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜类型", DbType="NVarChar(50)")]
		public string 智能柜类型
		{
			get
			{
				return this._智能柜类型;
			}
			set
			{
				if ((this._智能柜类型 != value))
				{
					this.On智能柜类型Changing(value);
					this.SendPropertyChanging();
					this._智能柜类型 = value;
					this.SendPropertyChanged("智能柜类型");
					this.On智能柜类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_存放时间", DbType="NVarChar(50)")]
		public string 存放时间
		{
			get
			{
				return this._存放时间;
			}
			set
			{
				if ((this._存放时间 != value))
				{
					this.On存放时间Changing(value);
					this.SendPropertyChanging();
					this._存放时间 = value;
					this.SendPropertyChanged("存放时间");
					this.On存放时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.寄件信息审核表")]
	public partial class 寄件信息审核表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private string _用户名;
		
		private string _手机号码;
		
		private string _寄件地址;
		
		private string _智能柜类型;
		
		private string _物品类型;
		
		private string _预约日期;
		
		private string _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On手机号码Changing(string value);
    partial void On手机号码Changed();
    partial void On寄件地址Changing(string value);
    partial void On寄件地址Changed();
    partial void On智能柜类型Changing(string value);
    partial void On智能柜类型Changed();
    partial void On物品类型Changing(string value);
    partial void On物品类型Changed();
    partial void On预约日期Changing(string value);
    partial void On预约日期Changed();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public 寄件信息审核表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this.On用户名Changing(value);
					this.SendPropertyChanging();
					this._用户名 = value;
					this.SendPropertyChanged("用户名");
					this.On用户名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手机号码", DbType="NVarChar(50)")]
		public string 手机号码
		{
			get
			{
				return this._手机号码;
			}
			set
			{
				if ((this._手机号码 != value))
				{
					this.On手机号码Changing(value);
					this.SendPropertyChanging();
					this._手机号码 = value;
					this.SendPropertyChanged("手机号码");
					this.On手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_寄件地址", DbType="NVarChar(50)")]
		public string 寄件地址
		{
			get
			{
				return this._寄件地址;
			}
			set
			{
				if ((this._寄件地址 != value))
				{
					this.On寄件地址Changing(value);
					this.SendPropertyChanging();
					this._寄件地址 = value;
					this.SendPropertyChanged("寄件地址");
					this.On寄件地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜类型", DbType="NVarChar(50)")]
		public string 智能柜类型
		{
			get
			{
				return this._智能柜类型;
			}
			set
			{
				if ((this._智能柜类型 != value))
				{
					this.On智能柜类型Changing(value);
					this.SendPropertyChanging();
					this._智能柜类型 = value;
					this.SendPropertyChanged("智能柜类型");
					this.On智能柜类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_物品类型", DbType="NVarChar(50)")]
		public string 物品类型
		{
			get
			{
				return this._物品类型;
			}
			set
			{
				if ((this._物品类型 != value))
				{
					this.On物品类型Changing(value);
					this.SendPropertyChanging();
					this._物品类型 = value;
					this.SendPropertyChanged("物品类型");
					this.On物品类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_预约日期", DbType="NVarChar(50)")]
		public string 预约日期
		{
			get
			{
				return this._预约日期;
			}
			set
			{
				if ((this._预约日期 != value))
				{
					this.On预约日期Changing(value);
					this.SendPropertyChanging();
					this._预约日期 = value;
					this.SendPropertyChanged("预约日期");
					this.On预约日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.快递滞留表")]
	public partial class 快递滞留表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _快递单号;
		
		private string _用户名;
		
		private string _用户手机号码;
		
		private string _滞留时长;
		
		private string _超时费用;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On快递单号Changing(string value);
    partial void On快递单号Changed();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On用户手机号码Changing(string value);
    partial void On用户手机号码Changed();
    partial void On滞留时长Changing(string value);
    partial void On滞留时长Changed();
    partial void On超时费用Changing(string value);
    partial void On超时费用Changed();
    #endregion
		
		public 快递滞留表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_快递单号", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 快递单号
		{
			get
			{
				return this._快递单号;
			}
			set
			{
				if ((this._快递单号 != value))
				{
					this.On快递单号Changing(value);
					this.SendPropertyChanging();
					this._快递单号 = value;
					this.SendPropertyChanged("快递单号");
					this.On快递单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this.On用户名Changing(value);
					this.SendPropertyChanging();
					this._用户名 = value;
					this.SendPropertyChanged("用户名");
					this.On用户名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户手机号码", DbType="NVarChar(50)")]
		public string 用户手机号码
		{
			get
			{
				return this._用户手机号码;
			}
			set
			{
				if ((this._用户手机号码 != value))
				{
					this.On用户手机号码Changing(value);
					this.SendPropertyChanging();
					this._用户手机号码 = value;
					this.SendPropertyChanged("用户手机号码");
					this.On用户手机号码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_滞留时长", DbType="NVarChar(50)")]
		public string 滞留时长
		{
			get
			{
				return this._滞留时长;
			}
			set
			{
				if ((this._滞留时长 != value))
				{
					this.On滞留时长Changing(value);
					this.SendPropertyChanging();
					this._滞留时长 = value;
					this.SendPropertyChanged("滞留时长");
					this.On滞留时长Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_超时费用", DbType="NVarChar(50)")]
		public string 超时费用
		{
			get
			{
				return this._超时费用;
			}
			set
			{
				if ((this._超时费用 != value))
				{
					this.On超时费用Changing(value);
					this.SendPropertyChanging();
					this._超时费用 = value;
					this.SendPropertyChanged("超时费用");
					this.On超时费用Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.寄件订单信息表")]
	public partial class 寄件订单信息表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _用户名;
		
		private string _寄件码;
		
		private string _智能柜ID;
		
		private string _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On寄件码Changing(string value);
    partial void On寄件码Changed();
    partial void On智能柜IDChanging(string value);
    partial void On智能柜IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public 寄件订单信息表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this.On用户名Changing(value);
					this.SendPropertyChanging();
					this._用户名 = value;
					this.SendPropertyChanged("用户名");
					this.On用户名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_寄件码", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 寄件码
		{
			get
			{
				return this._寄件码;
			}
			set
			{
				if ((this._寄件码 != value))
				{
					this.On寄件码Changing(value);
					this.SendPropertyChanging();
					this._寄件码 = value;
					this.SendPropertyChanged("寄件码");
					this.On寄件码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜ID", DbType="NVarChar(50)")]
		public string 智能柜ID
		{
			get
			{
				return this._智能柜ID;
			}
			set
			{
				if ((this._智能柜ID != value))
				{
					this.On智能柜IDChanging(value);
					this.SendPropertyChanging();
					this._智能柜ID = value;
					this.SendPropertyChanged("智能柜ID");
					this.On智能柜IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.取件订单信息表")]
	public partial class 取件订单信息表 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _用户名;
		
		private string _取件码;
		
		private string _智能柜ID;
		
		private string _Status;
		
		private string _存放码;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On取件码Changing(string value);
    partial void On取件码Changed();
    partial void On智能柜IDChanging(string value);
    partial void On智能柜IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void On存放码Changing(string value);
    partial void On存放码Changed();
    #endregion
		
		public 取件订单信息表()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
		public string 用户名
		{
			get
			{
				return this._用户名;
			}
			set
			{
				if ((this._用户名 != value))
				{
					this.On用户名Changing(value);
					this.SendPropertyChanging();
					this._用户名 = value;
					this.SendPropertyChanged("用户名");
					this.On用户名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_取件码", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 取件码
		{
			get
			{
				return this._取件码;
			}
			set
			{
				if ((this._取件码 != value))
				{
					this.On取件码Changing(value);
					this.SendPropertyChanging();
					this._取件码 = value;
					this.SendPropertyChanged("取件码");
					this.On取件码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_智能柜ID", DbType="NVarChar(50)")]
		public string 智能柜ID
		{
			get
			{
				return this._智能柜ID;
			}
			set
			{
				if ((this._智能柜ID != value))
				{
					this.On智能柜IDChanging(value);
					this.SendPropertyChanging();
					this._智能柜ID = value;
					this.SendPropertyChanged("智能柜ID");
					this.On智能柜IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_存放码", DbType="NVarChar(50)")]
		public string 存放码
		{
			get
			{
				return this._存放码;
			}
			set
			{
				if ((this._存放码 != value))
				{
					this.On存放码Changing(value);
					this.SendPropertyChanging();
					this._存放码 = value;
					this.SendPropertyChanged("存放码");
					this.On存放码Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
